{"version":3,"sources":["tc-accept.js"],"names":["csrfToken","window","app","pageOptions","tc","termsName","formAction","formTerms","formReturnTo","logoutURL","termsText","TCAccept","props","state","isChecked","handleCheckboxChanged","bind","handleSubmit","event","this","setState","target","checked","preventDefault","className","dangerouslySetInnerHTML","__html","content","action","method","onSubmit","type","name","value","onChange","htmlFor","disabled","gettext","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAUQA,EAAcC,OAAOC,IAAIC,YAAzBH,U,EAQJC,OAAOG,GANTC,E,EAAAA,UACAC,E,EAAAA,WACAC,E,EAAAA,UACAC,E,EAAAA,aACAC,E,EAAAA,UACAC,E,EAAAA,UAIIC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,WAAW,GAGb,EAAKC,sBAAwB,EAAKA,sBAAsBC,KAA3B,gBAC7B,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,yDAWnB,SAAsBE,GACpBC,KAAKC,SAAS,CACZN,UAAWI,EAAMG,OAAOC,Y,0BAK5B,SAAaJ,GAEX,IAAKC,KAAKN,MAAMC,UAEd,OADAI,EAAMK,kBACC,I,oBAIX,WACE,OACE,sBAAKC,UAAU,2BAAf,UACE,sBAAKA,UAAU,4CAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD,OAEF,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,oBAAIC,wBAAyB,CAACC,OAAQrB,KACtC,qBAAKmB,UAAU,UAAf,SACE,cAAC,IAAD,CAAoBG,QAASjB,MAE/B,uBAAMkB,OAAQtB,EAAYuB,OAAO,OAAOC,SAAUX,KAAKF,aAAvD,UACE,uBAAOc,KAAK,SAASC,KAAK,sBAAsBC,MAAOjC,IACvD,qBAAKyB,wBAAyB,CAACC,OAAQnB,KACvC,qBAAKkB,wBAAyB,CAACC,OAAQlB,KACvC,gCACE,uBAAOuB,KAAK,WAAWC,KAAK,UAAUV,QAASH,KAAKN,MAAMC,UAAWoB,SAAUf,KAAKJ,wBACpF,uBAAOoB,QAAQ,UAAUX,UAAU,iBAAnC,wBAEF,cAAC,IAAD,CAAQO,KAAK,SAASK,UAAWjB,KAAKN,MAAMC,UAA5C,SAAyDuB,aAAQ,YACjE,mBAAGC,KAAM7B,EAAWe,UAAU,yBAA9B,SAAwDa,aAAQ,2B,GAjDvDE,IAAMC,WAqE7BC,IAASC,OACP,cAAC/B,EAAD,IACAgC,SAASC,eAAe,a","file":"static/js/TCAccept.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'reactstrap';\nimport { gettext } from './utils/constants';\nimport Logo from './components/logo';\nimport Account from './components/common/account';\nimport TermsPreviewWidget from './components/terms-preview-widget';\n\nimport './css/tc-accept.css';\n\nconst { csrfToken } = window.app.pageOptions;\nconst {\n  termsName,\n  formAction,\n  formTerms,\n  formReturnTo,\n  logoutURL,\n  termsText\n} = window.tc;\n\n\nclass TCAccept extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChecked: false\n    }\n\n    this.handleCheckboxChanged = this.handleCheckboxChanged.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCheckboxChanged(event) {\n    this.setState({\n      isChecked: event.target.checked\n    });\n    \n  }\n\n  handleSubmit(event) {\n    \n    if (!this.state.isChecked) {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"top-header d-flex justify-content-between\">\n          <Logo />\n          <Account />\n        </div>\n        <div className=\"o-auto\">\n          <div className=\"py-4 px-4 my-6 mx-auto content\">\n            <h2 dangerouslySetInnerHTML={{__html: termsName}}></h2>\n            <div className=\"article\">\n              <TermsPreviewWidget content={termsText} />\n            </div>\n            <form action={formAction} method=\"post\" onSubmit={this.handleSubmit}>\n              <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n              <div dangerouslySetInnerHTML={{__html: formTerms}}></div>\n              <div dangerouslySetInnerHTML={{__html: formReturnTo}}></div>\n              <div>\n                <input type=\"checkbox\" name=\"agreeTC\" checked={this.state.isChecked} onChange={this.handleCheckboxChanged}/>\n                <label htmlFor=\"agreeTC\" className='checkbox-label'>I agree</label>\n              </div>\n              <Button type=\"submit\" disabled={!this.state.isChecked} >{gettext('Accept')}</Button>\n              <a href={logoutURL} className=\"btn btn-secondary ml-2\">{gettext('Cancel')}</a>\n            </form>\n            {/* <form onSubmit={this.handleSubmit} >\n              <input type=\"hidden\" name=\"csrfmiddlewaretoken\" />\n              <div dangerouslySetInnerHTML={{__html: formTerms}}></div>\n              <div dangerouslySetInnerHTML={{__html: formReturnTo}}></div>\n              <div>\n                <input type=\"checkbox\" name=\"agreeTC\" checked={this.state.isChecked} onChange={this.handleCheckboxChanged}/>\n                <label htmlFor=\"agreeTC\" className='checkbox-label'>I agree</label>\n              </div>\n              <Button type=\"submit\" disabled={!this.state.isChecked}>{gettext('Accept')}</Button>\n              <a href={logoutURL} className=\"btn btn-secondary ml-2\">{gettext('Cancel')}</a>\n            </form> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <TCAccept />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}